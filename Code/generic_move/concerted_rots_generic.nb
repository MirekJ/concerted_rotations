(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    245082,       4906]
NotebookOptionsPosition[    240439,       4765]
NotebookOutlinePosition[    241049,       4786]
CellTagsIndexPosition[    241006,       4783]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Concerted rotations ", "Title",
 CellChangeTimes->{{3.684733590873189*^9, 3.684733621436892*^9}, 
   3.728023109409096*^9}],

Cell["\<\
Author : Luca Tubiana, luca.tubiana@univie.ac.at 
Last revision : 04.06.2018
\
\>", "Text",
 CellChangeTimes->{{3.737117373359952*^9, 3.7371174342549763`*^9}}],

Cell[TextData[{
 "This notebook implement the equations needed to compute a concerted \
rotation of 7  dihedral angles on a protein backbone. The algorithm adopted \
is the one proposed by ",
 ButtonBox["Zamuner et al, PLoSOne 10(3):e0118342",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://journals.plos.org/plosone/article?id=10.1371/journal.pone.\
0118342"], None},
  ButtonNote->
   "http://journals.plos.org/plosone/article?id=10.1371/journal.pone.0118342"],
 ".\n\nThe basic idea is to assign to each bond of the chain an orthonormal \
base, following the ",
 ButtonBox["Denavit-Hartenberg convention",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Denavit\[AHat]\.80\.93Hartenberg_\
parameters"], None},
  ButtonNote->
   "https://en.wikipedia.org/wiki/Denavit\[AHat]\.80\.93Hartenberg_\
parameters"],
 ". The constraints of moving a series of bonds while keeping the first and \
last of them fixed can then be \ninterpreted as a constraint on the base \
transformation matrix bringing the base attached to the first bond into the \
one attached to the last bond. \n\nSuch constraints correspond to 6 \
independent equations: 3 for the orientation and 3 for the translation- for \
the last bond. Given a set of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", ">", "6"}], TraditionalForm]]],
 "  variables, the constraint equations identify a manifold of dimension ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "-", "6"}], TraditionalForm]]],
 " in ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    StyleBox["R",
     FontFamily->"MathJax_AMS"], "6"], TraditionalForm]]],
 ". Given \na solution to the equations, a new one can then be found through \
a  random displacement on the tangent space of the manifold followed by a  \
minimization to project the new point on the tangent space back to the \
manifold. \nEvery such operation correspond to a concerted rotation of the \
selected portion of the chain. The tangent space can be identifying applying \
Dini\[CloseCurlyQuote]s theorem once a free variable is chosen.\n \nHere we \
consider only a variation of 7  torsion angles, giving us a one-dimensional \
manifold. Our approach can nonetheless be generalized to a different set of 7 \
variables without a significative effort, and to a set of more than seven \
variables with some investment.\n\n",
 StyleBox["Main differences with respect to Zamuner\[CloseCurlyQuote]s \
approach: \n", "Subsection"],
 StyleBox["\n1.",
  FontWeight->"Bold"],
 " In this version, we do not consider rescaling factors. These must be \
introduced when one wishes to consider a mix of angles and lengths as free \
variables for the move.",
 StyleBox["\n2.",
  FontWeight->"Bold"],
 " We compute the jacobian explicitly. However, being precomputed, it does \
not impact the speed of our code.\n\n",
 StyleBox["Organization of this notebook \n", "Subsection"],
 "\nThe notebook is divided in three sections, corresponding to the three \
stages to create a C library for concerted rotations.\n\n",
 StyleBox["1. Short theoretical introduction. ",
  FontWeight->"Bold"],
 " A very brief introduction to the method. For more details please see \
Zamuner et al, or our epje article",
 StyleBox[". \n2. Equations implementing the move",
  FontWeight->"Bold"],
 ". All constraints equations are written explicitly with respect to the \
chosen set of free variables, called",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     SubscriptBox["t", "1"], ",", "...", ",", 
     SubscriptBox["t", "7"]}]}], TraditionalForm]]],
 StyleBox[".", "InlineFormula"],
 "\n",
 StyleBox["3. Printing the equations.",
  FontWeight->"Bold"],
 " Generates all files needed by the python wrapper to put together the C \
library. Defines the substitution rule for sines and cosines.\n",
 StyleBox["4. Call the wrapper.",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.684733684998139*^9, 3.684733695688959*^9}, {
   3.684733729361454*^9, 3.684734445918097*^9}, {3.684734727325182*^9, 
   3.684734756709106*^9}, {3.684735347966317*^9, 3.684735400653358*^9}, {
   3.728023152906234*^9, 3.728023180610515*^9}, {3.72828261082227*^9, 
   3.728282619225294*^9}, {3.7371156208409777`*^9, 3.737115695449603*^9}, {
   3.737115814091298*^9, 3.737115825603243*^9}, {3.737115892420473*^9, 
   3.737115930140764*^9}, {3.737116074118375*^9, 3.7371161330711727`*^9}, {
   3.737116192711775*^9, 3.737116314697618*^9}, {3.737116374954328*^9, 
   3.737116440810824*^9}, {3.737116493227489*^9, 3.7371166897995*^9}, {
   3.7371168093036947`*^9, 3.737116842183902*^9}, {3.73711765425852*^9, 
   3.737117654930441*^9}, 3.73711772062729*^9, {3.737117753123392*^9, 
   3.7371177544913273`*^9}, {3.7371181873659277`*^9, 3.737118201593004*^9}, {
   3.737118254139104*^9, 3.737118295259882*^9}, {3.737118394006493*^9, 
   3.7371184239342613`*^9}, {3.737260759439383*^9, 3.7372608174307213`*^9}}],

Cell[CellGroupData[{

Cell[" Notebook general parameters", "Subsection",
 CellChangeTimes->{{3.681800611029468*^9, 3.681800660290463*^9}, {
  3.681811790284645*^9, 3.6818118070844297`*^9}, {3.68473447830903*^9, 
  3.684734485236966*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6818119497796288`*^9, 3.681811963887738*^9}, 
   3.6847335613132257`*^9}],

Cell[BoxData["\<\"/home/tubiana/Science/Projects/ABM/concerted_rotations/Code/\
generic_move\"\>"], "Output",
 CellChangeTimes->{3.694527982386312*^9, 3.6945280727259912`*^9, 
  3.700218348821628*^9, 3.726400163763892*^9, 3.726400214891765*^9, 
  3.7280231005074043`*^9, 3.7280236579564734`*^9, 3.728026164911865*^9, 
  3.728301031661734*^9, 3.728301242362598*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Directory", "[", "]"}]], "Input",
 CellChangeTimes->{{3.681811985908639*^9, 3.681811988350381*^9}}],

Cell[BoxData["\<\"/home/tubiana/Science/Projects/ABM/concerted_rotations/Code/\
generic_move\"\>"], "Output",
 CellChangeTimes->{
  3.681811988749309*^9, 3.68181201935502*^9, {3.681812157700461*^9, 
   3.6818121621694107`*^9}, 3.681821258092148*^9, 3.6818804724185953`*^9, 
   3.681881049780696*^9, 3.68224802332924*^9, 3.6822480893856993`*^9, 
   3.682249994780308*^9, 3.684661247031863*^9, 3.6846735810685987`*^9, 
   3.684673739874913*^9, 3.684673863274335*^9, 3.684677436676705*^9, 
   3.684737147446352*^9, 3.6847380949383383`*^9, 3.684847584865593*^9, 
   3.68518323684855*^9, 3.685191352291548*^9, 3.685194169133441*^9, 
   3.685194700579805*^9, 3.6852462368702087`*^9, 3.685247003065207*^9, 
   3.6852494957890263`*^9, 3.685277351754097*^9, 3.685277672995145*^9, 
   3.685872409269957*^9, 3.685948922002508*^9, 3.687262972310916*^9, 
   3.6872700507339973`*^9, 3.687685522009264*^9, 3.6876943526129417`*^9, 
   3.687696346467997*^9, 3.6899274445246572`*^9, 3.689938810992054*^9, 
   3.689940139475319*^9, 3.689940285339801*^9, 3.689941502612076*^9, 
   3.6899415362249126`*^9, 3.689941983125843*^9, 3.690024416091242*^9, 
   3.690093532960177*^9, 3.69010776883537*^9, 3.69010935321607*^9, 
   3.6901094158428917`*^9, 3.6902630492038603`*^9, 3.690263411002825*^9, 
   3.69026381049331*^9, 3.690265965806698*^9, 3.690266299972509*^9, 
   3.690266512283352*^9, 3.69026669012506*^9, 3.690267295083166*^9, 
   3.6902741882625017`*^9, 3.6902742336419563`*^9, 3.690274686254407*^9, 
   3.6905398696737337`*^9, 3.690551759360043*^9, 3.694527991437787*^9, 
   3.694528072841606*^9, 3.700218348947112*^9, 3.726400166924375*^9, 
   3.726400214943407*^9, 3.728023658089457*^9, 3.72802616506516*^9, 
   3.728301037242569*^9, 3.728301242615253*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["A quick introduction to the method", "Section",
 CellChangeTimes->{{3.73726084627931*^9, 3.7372608938153152`*^9}}],

Cell[TextData[{
 "Following Zamuner et al, we implement the concerted rotations by following \
the DH convention.  For every link (chain bond) involved in the move we \
construct an orthonormal basis ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     StyleBox["e",
      FontWeight->"Bold"], "x"], ",", 
    SubscriptBox[
     StyleBox["e",
      FontWeight->"Bold"], "y"], ",", 
    SubscriptBox[
     StyleBox["e",
      FontWeight->"Bold"], "z"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " as follows: \n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     StyleBox["e",
      FontWeight->"Bold"], 
     RowBox[{"z", ",", "i"}]], "=", 
    RowBox[{
     SubscriptBox[
      StyleBox["b",
       FontWeight->"Bold"], "i"], "/", 
     RowBox[{"\[LeftBracketingBar]", 
      SubscriptBox[
       StyleBox["b",
        FontWeight->"Bold"], "i"], "\[RightBracketingBar]"}]}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     StyleBox["b",
      FontWeight->"Bold"], "i"], " "}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "is the bond vector to which the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"i", "-", "th"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " base is attached;\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     StyleBox["e",
      FontWeight->"Bold"], 
     RowBox[{"x", ",", "i"}]], "=", 
    RowBox[{
     SubscriptBox[
      StyleBox["e",
       FontWeight->"Bold"], 
      RowBox[{"z", ",", 
       RowBox[{"i", "-", "1"}]}]], "\[Times]", 
     SubscriptBox[
      StyleBox["e",
       FontWeight->"Bold"], 
      RowBox[{"z", ",", "i"}]]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ";\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     StyleBox["e",
      FontWeight->"Bold"], 
     RowBox[{"y", ",", "i"}]], " ", "=", 
    RowBox[{
     SubscriptBox[
      StyleBox["e",
       FontWeight->"Bold"], 
      RowBox[{"z", ",", "i"}]], "\[Times]", 
     RowBox[{
      SubscriptBox[
       StyleBox["e",
        FontWeight->"Bold"], 
       RowBox[{"x", ",", "i"}]], "."}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n The origin of  reference frame ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["O", "i"], " "}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "is placed  on the first atom of the corresponding bond if  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     StyleBox["e",
      FontWeight->"Bold"], 
     RowBox[{"z", ",", "i"}]], ",", 
    SubscriptBox[
     StyleBox["e",
      FontWeight->"Bold"], 
     RowBox[{"z", ",", 
      RowBox[{"i", "-", "1"}]}]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " are coplanar, or along ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    StyleBox["e",
     FontWeight->"Bold"], 
    RowBox[{"z", ",", "i"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " at the minimum distance from ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    StyleBox["e",
     FontWeight->"Bold"], 
    RowBox[{"z", ",", 
     RowBox[{"i", "-", "1"}]}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " otherwise. \n \n A vector  ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", "i"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " in the reference frame  ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["O", "i"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " can be expressed in the reference frame ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["O", 
     RowBox[{"i", "-", "1"}]], " "}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "as:\n ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     StyleBox["a",
      FontWeight->"Bold"], 
     RowBox[{"i", "-", "1"}]], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox[
       SuperscriptBox[
        StyleBox["R",
         FontWeight->"Bold"], "i"], 
       RowBox[{"i", "-", "1"}]], 
      SubscriptBox[
       StyleBox["a",
        FontWeight->"Bold"], "i"]}], "+", 
     SubscriptBox[
      SuperscriptBox[
       StyleBox["S",
        FontWeight->"Bold"], "i"], 
      RowBox[{"i", "-", "1"}]]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    SuperscriptBox[
     StyleBox["R",
      FontWeight->"Bold"], "i"], 
    RowBox[{"i", "-", "1"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is the transformation matrix expressing the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"i", "-", "th"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " basis in terms of the ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"i", "-", "1"}], ")"}], "-", "th"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " basis and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    SuperscriptBox[
     StyleBox["S",
      FontWeight->"Bold"], "i"], 
    RowBox[{"i", "-", "1"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is the displacement vector between their origins. \n \n Introducing the \
vector  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["a",
      FontWeight->"Bold"], "'"}], "=", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       StyleBox["a",
        FontWeight->"Bold"], ",", "1"}], ")"}], "T"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", we can rewrite the previous expression in a more compact form as:\n ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     StyleBox[
      RowBox[{"a", "'"}],
      FontWeight->"Bold"], 
     RowBox[{"i", "-", "1"}]], "=", 
    RowBox[{
     SubscriptBox[
      SuperscriptBox[
       StyleBox["T",
        FontWeight->"Bold"], "i"], 
      RowBox[{"i", "-", "1"}]], 
     SubscriptBox[
      StyleBox[
       RowBox[{"a", "'"}],
       FontWeight->"Bold"], "i"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ",\n where\n ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     SuperscriptBox[
      StyleBox["T",
       FontWeight->"Bold"], "i"], 
     RowBox[{"i", "-", "1"}]], "=", 
    RowBox[{"(", GridBox[{
       {
        SubscriptBox[
         SuperscriptBox[
          StyleBox["R",
           FontWeight->"Bold"], "i"], 
         RowBox[{"i", "-", "1"}]], 
        SubscriptBox[
         SuperscriptBox[
          StyleBox["S",
           FontWeight->"Bold"], "i"], 
         RowBox[{"i", "-", "1"}]]},
       {"0", "1"}
      }], ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n  Our ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " notebook implements these matrices in terms of the 4 DH parameters: \n  * \
the ",
 StyleBox["link twist",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", "i"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", defined as the angle between ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    StyleBox["e",
     FontWeight->"Bold"], 
    RowBox[{"z", ",", "i"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    StyleBox["e",
     FontWeight->"Bold"], 
    RowBox[{"z", ",", 
     RowBox[{"i", "-", "1"}]}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", measured around ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    StyleBox["e",
     FontWeight->"Bold"], 
    RowBox[{"x", ",", "i"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ";\n  * the",
 StyleBox[" joint angle",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Theta]", "i"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", defined as the angle between  ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    StyleBox["e",
     FontWeight->"Bold"], 
    RowBox[{"x", ",", "i"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    StyleBox["e",
     FontWeight->"Bold"], 
    RowBox[{"x", ",", 
     RowBox[{"i", "-", "1"}]}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", measured around ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    StyleBox["e",
     FontWeight->"Bold"], 
    RowBox[{"z", ",", 
     RowBox[{"i", "-", "1"}]}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ";\n  * the ",
 StyleBox["link offset",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["d", "i"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", given by  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["d", "i"], "=", 
    RowBox[{"\[LeftBracketingBar]", 
     RowBox[{
      SubscriptBox[
       SuperscriptBox[
        StyleBox["S",
         FontWeight->"Bold"], "i"], 
       RowBox[{"i", "-", "1"}]], " ", "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox[
          SuperscriptBox[
           StyleBox["S",
            FontWeight->"Bold"], "i"], 
          RowBox[{"i", "-", "1"}]], "\[CenterDot]", 
         SubscriptBox[
          StyleBox["e",
           FontWeight->"Bold"], 
          RowBox[{"z", ",", 
           RowBox[{"i", "-", "1"}]}]]}], ")"}], 
       SubscriptBox[
        StyleBox["e",
         FontWeight->"Bold"], 
        RowBox[{"z", ",", 
         RowBox[{"i", "-", "1"}]}]]}]}], " ", "\[RightBracketingBar]"}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 " \n  * the",
 StyleBox[" ",
  FontWeight->"Bold"],
 StyleBox["link length",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["r", "i"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", given by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["r", "i"], "="}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     SuperscriptBox[
      StyleBox["S",
       FontWeight->"Bold"], "i"], 
     RowBox[{"i", "-", "1"}]], "\[CenterDot]", 
    SubscriptBox[
     StyleBox["e",
      FontWeight->"Bold"], 
     RowBox[{"z", ",", 
      RowBox[{"i", "-", "1"}]}]]}], TraditionalForm]]],
 " \n  \n Composing the ",
 Cell[BoxData[
  FormBox["T", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " matrices we can impose a constraint for the move of a portion of polymer \
backbone, by requesting that a vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["a",
     FontWeight->"Bold"], "'"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is tranformed in the same way both by the matrices T before the move and \
by the ones modified by the move:\n \[LineSeparator] ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     StyleBox[
      RowBox[{"a", "'"}],
      FontWeight->"Bold"], "i"], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox[
         SuperscriptBox[
          StyleBox["T",
           FontWeight->"Bold"], 
          RowBox[{"i", "+", "1"}]], "i"], 
        SubscriptBox[
         SuperscriptBox[
          StyleBox["T",
           FontWeight->"Bold"], 
          RowBox[{"i", "+", "2"}]], 
         RowBox[{"i", "+", "1"}]]}], "..."}], ".", 
      SubscriptBox[
       SuperscriptBox[
        StyleBox["T",
         FontWeight->"Bold"], "j"], 
       RowBox[{"j", "-", "1"}]]}], 
     SubscriptBox[
      StyleBox[
       RowBox[{"a", "'"}],
       FontWeight->"Bold"], "j"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"\[LongRightArrow]", 
      SubscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           SubscriptBox[
            SuperscriptBox[
             StyleBox["T",
              FontWeight->"Bold"], 
             RowBox[{"i", "+", "1"}]], "i"], 
           SubscriptBox[
            SuperscriptBox[
             StyleBox["T",
              FontWeight->"Bold"], 
             RowBox[{"i", "+", "2"}]], 
            RowBox[{"i", "+", "1"}]]}], "..."}], ".", 
         SubscriptBox[
          SuperscriptBox[
           StyleBox["T",
            FontWeight->"Bold"], "j"], 
          RowBox[{"j", "-", "1"}]]}], ")"}], "old"]}], "-", 
     SubscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          SubscriptBox[
           SuperscriptBox[
            StyleBox["T",
             FontWeight->"Bold"], 
            RowBox[{"i", "+", "1"}]], "i"], 
          SubscriptBox[
           SuperscriptBox[
            StyleBox["T",
             FontWeight->"Bold"], 
            RowBox[{"i", "+", "2"}]], 
           RowBox[{"i", "+", "1"}]]}], "..."}], ".", 
        SubscriptBox[
         SuperscriptBox[
          StyleBox["T",
           FontWeight->"Bold"], "j"], 
         RowBox[{"j", "-", "1"}]]}], ")"}], "new"]}], "=", "0"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 "  \n   \n  ",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
IrvwEHYf2oTp8RPxw7TRkoXSjm2D3n0WZn+BZJsCWxYK7TkleCicd6LykCNw
XOUhh1ord6a4Vs6l5SBinnPzUHhuSMtDKveE9w0Fe4ecobVyxrBauag8pGUe
tXcojIlMZegdMkdgofBaOVMJHgpnoWIeouMGwT80NehMURZef3ueYJoFaNQ8
C83bWUQUoVUnHdpeRvVverTsoJe9QLGtjCIKROwV1+cL3vkQ9eMeQNf/PoUV
a5Pkubbs2oSJv07A0BEf4o0hb4oYjK/HfYWV65fBIH2s/YK7TOIx6GWdHjEY
zfnxCQbJ02Vh1oK5eHXA+7j+lqdQs/5/UaNeP8FPIwUL/SJinvSYaxi3DrFN
tqJ5y/1oeflZtL7Zgyvv8OGhzkfw9WXfY1uj+4CKxbVypy5pjxlxr6PXVWtx
wy12tPoXECd4qEFMJjp02IVnX9iNsT/txK69x+U0Jeod8go+s3soN2SWPttB
H7nw/FAZvBSo98gvzqg36DFr9izpL0kqb2t4ejzqXGpSOGeQFyZ5tD0sOOXV
vn3l9/vjvvkGP/3yCybMnYtlQ4fiTMeOwdd9/xVX4PPevfH866+jW8+eeOXm
m6UX3BRxjHzoqlWrhquuvBJ33Hmn9Di4M7ClXiSagXrdddehU6dO0s+OeoBo
hivtU3uBLqD19EXBQNQfRnPn5syZE7EPiOrkiHUoyBeOZkkMHz5c9g5pvRNY
LBarPEitCy/S6fDITTfhcvG51LdODfSucymGCP7ZL8Ilwl2vBtztW8J1/VXw
N2mEDMFFY8T+oSJerlMd99S8BJfHNMCGzdT76IfTYw/yjbYWLhgaFpLhD4TK
TYHQcpJHPVd4Dikszp+nQiMiJ0VirDLksTz+KDwVksMKz2OVksMSP8vncUgH
u9mrlqN3t/uw4orL4L20mrLuoFkbgZC+wnXqYLBYq7z+xhsYJIK8fGgGPHks
9enzCrp3vR/3du2Cpwc/jfte6o6x776CQ/+9F+5aNYPnK+p+LzLmTsCenFSk
648iq+gwckQQ+8xbNg3fTR6FWYlTsOvQZtkfRCxEtWzavFBZc0MReSgkN5Qb
yA2dT99QaF6otNyQeiwyCwXq5X5vbkj1jgvrISpLbqg0D4VIuSGTO7xvSOUh
nTyn1WsQf0MWrNu6E3d3+wW1G2+Q/tbN2xnRor1Ock/bK2irQ4sOVBNH3m8U
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
a9+cgegtyM2lmpBcTJq0lx07zvjhhzz8+9/5qFgRjIkAkuEoXx4g2evk5Bg4
OZ3mGoGktU5WQnhSYxrTmMaKNOG8T3out+/fYPF7Go/xxQyk4CwWyWCn6O0b
dKBf8xe8aFkbob1YbD+mH2K0JiNl8lBktKmH4AaVsZX5y8c3+O94EtufWmaR
1P3Lucp8kXLti0qXW0/gLOX15HlI3XNTfh6UH8tlkeNrXw+Ur1Aec+fP5u8f
LaPrx3RL+r2Z+cly73OL1s3hfP0SeB9AZoyEseKRRNer2Xv+PsgH2gZLsWgV
46Y9W2BzfC+O29sgsnULcfz+e1UcWq/L+GcjdPWXcP4ZOKIP7/9xfXGP9xkR
Z6Snp5eE33KpCc8lNiYODo5H8SUlADFZoZxrZDlIWS9BeRnNWiWt7RiBhVID
cevZZazdtgajpg9iPhCLVs+A4YZlMNltBNMjZti7wxDPxw9GStVKUhZK6dEJ
gXY74fHpOdyj38BPYKGEAPgEueHCrZOwsbfAsXP78NznPq+N4yzEWCc6PYRr
KBSWGxJ6hpTzQuFq8kKF54Zi078wRohCck4013nT27AS5tbrccHlFO6/vIFX
bx/BO+AlZ6AXPq548MqF54VOXj4CW/sd2LDdCMv0F/Cen24D/sTOA2Zc94B0
5Ih9ZLXmip7BGiWpk1NdK6ec61GRG8qS9AwVpikn8aSvrpUTH6d0XJEu2+Hj
B7DGQBtLVy7CwqULsHjZQixZsRBaS+bjyYuHXPs/IS1aonUPzNeai3ETxtI3
l/fyKV0PKTQ3lPBfqJVLlmgpiHuH6PwpaG2///gGu3ZvxZKlc9Gnf1d07t4B
XXt1xPBxQzFz4Uz2GS+H3iZDrNu1GdsO7cGhSydx6ekdPHrviddRn3DL+xm2
7tiGbVu34jyLVx0uX4K9nR1srKywceNGLFu2jGsgUDxLGscUy35v8aygb3CC
va6m7FifwHwJ5X2YGzPX//e/sZLdUi3cGnZ/JvO7x47JbfsN7ZszEPEPmbU1
1Y/uRalSKVxyo0yZfNSsCe7lJGOrypVLx549DzB16jisWLGSb/e9fV80pjGN
/d82cQ4oD+cvnkNEfDDvkVGcgyjrqbmJ0Js/EYs7N8cBkxU467gPd1yvwvej
Bz57PcTrHevwpOcfMG9Vh3HCU95jIDBVkozLXutVckX2KsIL5auiXOgjkGEw
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
vk8w8Yw/Wva4ik593NGqfxi69g2G379/5fyT8vanGN/tLJoNuI5Ov51C+367
aH0dYqcB9L1Zc5+OpF+NvN9KJZNxf1QMLlidQWZGltzvqLEnM+F8HXAnAJec
zXhuUGJhqLyPU3QfQM4vpBArJ84dUusbKmp4D9ba3LVorNy6ENMNxmLnMVNY
Op/CtYDLuBN6kzOQ72MPnLY9BONti4iLvZFVkaC29pxij2DV8XKqfUPKfYEb
VmO7Tt/Qy+g5VKbeL9SweLn6e7BmSX1BpXRkJ2ZEwcbBGk5OTsjPzZfueZr7
Fn9FE59n7ays0L91a3xN53fmF2Ixcq1ILUjfkj4mNfv8cxw+cACV0jHbc/zN
n4qBmAnv6dw5S7z5ZnO6XPVA06baaNzYgB4bSTlnJak16StSF1Jf0kiSDmk9
6SDJQlozm3GQI+k8bW87Vq50QllZhfS1NNepV8Hq8+8wKyws5HFngYGBvNbl
lStXeEwbe8zqE8TFxyG/IF/lc2uknMPy1dhjxRoJnIWk949WrV6Fzl06Y8nS
JdixcweOHDmMY8eO8Xwhk/UmmDlzBtq1a4uWrVpi5KiRsLa2RmmJJFZOcw7+
e5uw/ybEJ8Ca+YCqYnluuMTHE9YAyfuBth1biyFTfsPc5ZOwZKMuNhxYib3n
NuOEzV5YuJ7gDORJDOQf4wm/VH/cvXsZrv52xDcGWLR+DpZumk+aR8+dx/1I
bMrYaNH6udAnDlqwZgbnI92VU6FDbKS7chp0VkzBXNI84+n8+Su36WPt74tp
uhEb9p/CzpMW2HXSHKds7eHk5YEbDzxxN8qfeOk+YnMfI6MiijMSY6Xs6hji
pFhkk7LocXoZjT9L2fg0AvvOnULHAUZo+etB4hZ30kN06BdBikKnAZHoPjQS
vUZEo7dWKNoMikSPvg9x719dOP8kvvM5Rv9qhuYDPdC590l06r8LrXvp4LeR
I+Dsc4m4LJ5/h4rjaSUxZiNOykUSXL0c4eXlzX8/zXH8x0z4/ljcsZuPI7KR
iHhpjQQZ9xQ9GQ/VV2f7SfoOZVUmcP6fPH8Eth1ZC7PLx+DmZ0fc74FH8X7w
D7sJc6cTWLNzKfxCb9D6ibLcuLrqvD8JDz2TunJqerA+Lx56UXXlxDUU2DK2
/aKabOSXp+Omlzvv9RMZGaW0v2nsr2n895NeO9l9bXsbG6xdtgzTx4zBRC0t
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
n+SklN987But0R5wuy8ZiEx8Z7Rjxw489dRTnIUoJo5qK9B7rREjRnDWoTgD
0vppSBoRtVNtVYqdo9qq7du1x6tNm6Jl62ZYtWEBDp05Bg/fUwjcvwWFXb6u
jZF78kkopoxBQewdyMrz4R8fACeXvdi2bz2cTx5BcnYsdDUKrsIoGTPIiYeI
JSjHttQZIymJF0izIRahWqSMjxSMkwSvgLJaDqU2B+rieB7XpqwohM5/D/Se
U2A42B+V675G1YK3UDP1GaFPEmMiTXYQY51S1Ex6AejN2kYwTprwGGOpN9j8
7WHYPwAVJ6ZBTTF81Upo0gOgyQmDivolsXGuG3FOE2LtSM/iDET8JOpIeoGR
lPoCYT9YG+2LSuQl9llhYqcSvpywr8K4lJ+UFsNar+Uc62kid1kykvWyZowj
5S4pS0nXY6ElUZuWnYfc0gx0/K4/nnmxG15uPpExz1zmi40+i/kEvPT6eJ4j
e/y0HbjmF81j6GpIm5PEEd51bgsbupVK0k7HmTiI+mFRHyGxJseD8I789zYe
T8v+SkvkcPI4iBxEIQ+xyOfOnnuqo4y8EoA4uT+SVEFcv1nnNA9L9k7Ffu+1
cLq8BS4hR5HeqwO/PmhfeBpue2Zi3amVWL1/GuZuG4ehc3pgz6k1XD8ixhAZ
iIbxfNzaLbUgKzYycllCmT8Sy24jTh/N2gNQeGYqqqY8DXRn14KNX3DmideG
I648is3HGI7mt8NRv90DTbGDQrxgKHwTT/N8ESf99yGm+KZJQyLOSWYslK4P
wk5PZ0xYvhzx7NgmKYOMsYESvmJttK9HXA9ApVSbzt39bGIsN/VTo/tVREQE
b/8949DqMvF76X0h1Rb/vbZF2j+P4jToHSTlSaB8rjSk+zPlBLd8VheXy88r
xGHn/YxtYpCljUMG56A4gYXUIgvFWsfCkQ5EsXBVabgWdAJTu70DF8ZAid0p
J8J7yOz1IbKIgQZ+ifyfPsHtji3gvmEKcvSpQv1VY61Vs1pEGuvarFYsZBkr
J2EiM06S1GDl9VWtcmxb5JUz1SkS2rLViSjQy7j2E55yG87ujrh104+dQ+E4
Nsa9NVqj1Wn3LQOJ95Ly8nL+DuuZZ57BZ599xvWg7t27c8YhFiJdiK63NKRx
6p9JubSpZvwXX7TFe++9h1defgUtW7bEmEnDsW7bUmzcvgJ7Tx6C+3UvBOzf
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
A7757iteA5sxUfJDP9yyvIQJM0bzY9jriJiKMVwEy9eT8LHYfITw/KKE7y/m
nsoOVCGp9j6W4HhWc8I32xp3HBRgE0HXvuQBZyvGcjHCXL2kJh/cMlDCsSPH
YWJi0uaeSeOPFSJ+TU9PR7du3fD555/j+++/F/cNehP5tpV489Gjh7j08zrM
+stbsFk9CpHEPIx/skRaNRpZGyYha+csZO+dh+ztM5C9bgIilw2HwaIhcLdX
Qy7rH0QcVNqaiqhcXxha6sDdzR1Njc38faR5b9KQxh8qpAz0K4fg++8pHj58
BDNzU4Ql+Qs5KINzUEk77hF7Qu34qJhYiLWtGZuw3Cu/GFecuXoYyzbNxRzi
obW7l0L21HbOQmevHMJZ9TO4ZKQMI6XDiJ8zGU+6PvOFihbOQpStFoILwhFf
kYCskjikFkTAM9yBGOMaVHUucy5iHFBO71f2pIDa6Zkobn+u7ZmtKVvY/s/i
EnFMm8/1Ig9MmA8oqBNRyBkkpzIZTv7W/LNu2rcKG2VW8rEiD5zeiYNndtFn
3olDZ3dC9qQMRv6ogb6j9IltiHvG6JF0SPdIt0jXSJeJk04T98hT+38neg5b
im4DJtBxUyFzXAbWbiYoqEvntRUYC5R0wn+d5QeWt/GyOvK2OvO+2tYLrBT6
TuUtudyHumeqhfV7ZDFw9BJ8338tug05ia/H6aDHOAvMG6yG69+sR9oH3Z/V
UXinK4K+nIHzo+9g/rwkDF1Ug4EzKzB8Ui7GTM7CpDnZmL0sF/NXF2DGkkIM
Hp+DyfOCcOWOMnQsbsI7/IGgbgYxGfO3yoTj/bbv68XYjdUZLKjKgImFAYKC
gts9968v2Ps/eviYj1vsnm6K2w5ncdXiCHQ8r8DIWwUmibpI3zCLX6+Wj/8K
2zsyuOZ5GSqm8lDQ3YsDxD9GftcRV+OJ8LIHPAeOs0kZMQlbZgxQ4oAikzV4
svOvgnpvBz9F7gNZRFB7P7zOV7Cf6Lj2DPUisVy5KjekPw7kHMPeP7TIkeeQ
5SIMG/et4P9rd082g1+2Db7q9iX+/vHfoON0HYWIhpLuKQwY1hsJDT7EbhKs
Jclc4uV2bCahzs7tmT/U1hN7ts4Nd50vcPkRC0VL7Mv8p8RGH9iF6sHT0xPx
8Ql8nJk3LV9KGq8Woj5cTBMmTED37t15fbuvv/4aEydOFG973d8HktEqfNYM
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
KBQKhfI0p/L/A76oJ3M=
     "], {{0, 278}, {833, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{833, 278},
   PlotRange->{{0, 833}, {0, 278}}]], "Input"],
 "\n    The figure above provides a graphical example for the concerted \
rotation  of three consecutive residues on  a polypeptide chain. This \
involves seven T matrices.  The matrices, the constraint function and the \
derivatives necessary to define the tangent space to the constraint manifold \
are obtained in the rest of the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "  notebook."
}], "Text",
 CellChangeTimes->{{3.737260896538953*^9, 3.7372610580834627`*^9}, {
   3.7372611398028107`*^9, 3.7372613385642843`*^9}, {3.7372613852618237`*^9, 
   3.737261588432261*^9}, {3.7372623348261023`*^9, 3.7372624205778503`*^9}, {
   3.737262458226198*^9, 3.7372626058609247`*^9}, {3.737262655542178*^9, 
   3.73726302039338*^9}, {3.737263509872151*^9, 3.737263817667748*^9}, {
   3.737264492299601*^9, 3.7372645121770973`*^9}, {3.7372645795806704`*^9, 
   3.737264746284903*^9}, {3.737264833233115*^9, 3.7372648821776667`*^9}, {
   3.737264986199134*^9, 3.73726514037928*^9}, {3.737266340835278*^9, 
   3.737266344890032*^9}, {3.73726637596274*^9, 3.737266700790306*^9}, 
   3.737266791464755*^9, {3.737266841433078*^9, 3.73726686690471*^9}},
 FormatType->"TextForm"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7372648306725616`*^9, 3.737264831585321*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.737263598454221*^9, 3.737263598986251*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Equations implementing the move\
\>", "Section",
 CellChangeTimes->{{3.728023619237273*^9, 3.728023649175692*^9}, {
   3.7372611498110867`*^9, 3.737261151578575*^9}, 3.7372613165734653`*^9, {
   3.737262631404231*^9, 3.737262649604826*^9}}],

Cell[CellGroupData[{

Cell[" Transformation matrix", "Subsection",
 CellChangeTimes->{{3.681800611029468*^9, 3.681800660290463*^9}, {
  3.681811790284645*^9, 3.68181182870045*^9}, {3.685872297914584*^9, 
  3.685872302858279*^9}, {3.728023204466096*^9, 3.728023205194873*^9}}],

Cell[TextData[{
 "We consider a general transformation matrix.\nIn the following, \[Alpha] is \
the link twist, \[Theta] the joint angle, r=",
 Cell[BoxData[
  FormBox[
   OverscriptBox["S", "\[RightVector]"], TraditionalForm]]],
 "\[CenterDot]",
 Cell[BoxData[
  FormBox[
   OverscriptBox["z", "^"], TraditionalForm]]],
 " is the z component of ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["S", "\[RightVector]"], TraditionalForm]]],
 ",  and d=\[LeftDoubleBracketingBar]",
 Cell[BoxData[
  FormBox[
   OverscriptBox["S", "\[RightVector]"], TraditionalForm]]],
 "-(",
 Cell[BoxData[
  FormBox[
   OverscriptBox["S", "\[RightVector]"], TraditionalForm]]],
 "\[CenterDot]",
 Cell[BoxData[
  FormBox[
   OverscriptBox["z", "^"], TraditionalForm]]],
 Cell[BoxData[
  FormBox[
   RowBox[{")", 
    OverscriptBox["z", "^"]}], TraditionalForm]]],
 "\[RightDoubleBracketingBar] , with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["S", "\[RightVector]"], " "}], TraditionalForm]]],
 "the vector joinint the base i-1 with the base i ."
}], "Text",
 CellChangeTimes->{{3.681645432349728*^9, 3.681645455703678*^9}, {
  3.684734495644713*^9, 3.6847346245968723`*^9}, {3.6881915275119543`*^9, 
  3.688191598079432*^9}, {3.688191631775194*^9, 3.6881916827673798`*^9}, {
  3.700305932692638*^9, 3.700305957460619*^9}, {3.7003059913520603`*^9, 
  3.700306159692492*^9}, {3.728023318093031*^9, 3.7280233765648623`*^9}, {
  3.728282840467404*^9, 3.72828288636703*^9}, {3.7371168720085287`*^9, 
  3.737116903752771*^9}, {3.737264550988564*^9, 3.737264564390921*^9}, {
  3.737264816695603*^9, 3.7372648204714108`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"T", "[", 
   RowBox[{"\[Theta]_", ",", "\[Alpha]_", ",", "d_", ",", "r_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], ",", 
      RowBox[{"d", "*", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], ",", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], " ", 
       RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], ",", 
      RowBox[{
       RowBox[{"-", "d"}], "*", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"0.", ",", 
      RowBox[{"Sin", "[", "\[Alpha]", "]"}], ",", 
      RowBox[{"Cos", "[", "\[Alpha]", "]"}], ",", "r"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"0.", ",", "0.", ",", "0.", ",", "1."}], "}"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.681645371464799*^9, 3.681645377289969*^9}, {
   3.6816454187964077`*^9, 3.6816454263228073`*^9}, {3.681645516084312*^9, 
   3.681645715854268*^9}, {3.681645892691798*^9, 3.6816459116615257`*^9}, {
   3.681646140546163*^9, 3.681646141776829*^9}, {3.681646491363696*^9, 
   3.681646514258905*^9}, {3.6818212354459047`*^9, 3.681821238901635*^9}, {
   3.682245642914508*^9, 3.682245674310116*^9}, {3.6822472548214293`*^9, 
   3.682247256242034*^9}, {3.6822473744995527`*^9, 3.682247454347905*^9}, {
   3.682249248307135*^9, 3.6822492550092783`*^9}, {3.6822494848391047`*^9, 
   3.6822494944115763`*^9}, 3.687788373961481*^9, {3.688105098749242*^9, 
   3.688105187494773*^9}, {3.688106006355116*^9, 3.688106040536736*^9}, {
   3.688106078319072*^9, 3.6881060960395813`*^9}, {3.688106131768571*^9, 
   3.688106193623904*^9}, {3.6899383801143417`*^9, 3.689938399401044*^9}, {
   3.689938431810238*^9, 3.689938445185824*^9}, {3.6901017026560802`*^9, 
   3.690101707316689*^9}, {3.690107700435855*^9, 3.690107731968731*^9}, {
   3.690109147405306*^9, 3.690109151833242*^9}, {3.690265958402815*^9, 
   3.690265962609046*^9}, 3.690266296070369*^9, {3.690266500687579*^9, 
   3.6902665030773087`*^9}, 3.6902666680110826`*^9, {3.690267266842705*^9, 
   3.690267290970089*^9}, {3.6902746732703743`*^9, 3.690274676835146*^9}, {
   3.690369055400528*^9, 3.690369066206271*^9}, {3.690539850950551*^9, 
   3.690539851919622*^9}, {3.694528350100934*^9, 3.694528420164689*^9}, {
   3.7003057941558723`*^9, 3.700305889530839*^9}, {3.728023263939414*^9, 
   3.728023298844699*^9}, 3.728023381580016*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"T", "[", 
   RowBox[{"\[Theta]", ",", "\[Alpha]", ",", "d", ",", "r"}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.688105214896896*^9, 3.688105218219658*^9}, {
  3.694528448136051*^9, 3.694528455832142*^9}, {3.700305896736662*^9, 
  3.700305896839759*^9}, {3.7280233850793123`*^9, 3.7280233901954803`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"Cos", "[", "\[Theta]", "]"}], 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      RowBox[{
       RowBox[{"Sin", "[", "\[Alpha]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      RowBox[{"d", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
     {
      RowBox[{"Sin", "[", "\[Theta]", "]"}], 
      RowBox[{
       RowBox[{"Cos", "[", "\[Alpha]", "]"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], " ", 
       RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], 
      RowBox[{
       RowBox[{"-", "d"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}]},
     {"0.`", 
      RowBox[{"Sin", "[", "\[Alpha]", "]"}], 
      RowBox[{"Cos", "[", "\[Alpha]", "]"}], "r"},
     {"0.`", "0.`", "0.`", "1.`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.688105240333621*^9, 3.688105262325445*^9}, 
   3.688105625972183*^9, 3.688106045706386*^9, 3.688106099230101*^9, 
   3.688106152206895*^9, 3.688106197171814*^9, 3.688106422735124*^9, 
   3.68814097208895*^9, 3.688210278150611*^9, 3.688210344686309*^9, 
   3.688211735611568*^9, 3.688212613589365*^9, 3.688361842788794*^9, 
   3.688362161882869*^9, 3.68992696317624*^9, 3.6899274457493134`*^9, 
   3.6899388116461067`*^9, {3.689940076726664*^9, 3.68994009837722*^9}, {
   3.6899401338658323`*^9, 3.689940140395938*^9}, 3.6899402859903183`*^9, 
   3.689941503285664*^9, 3.689941537003152*^9, 3.6899419837567263`*^9, 
   3.690024416628497*^9, 3.690093534028208*^9, {3.690107757315303*^9, 
   3.690107769486611*^9}, 3.69010935418904*^9, 3.6901094166598053`*^9, 
   3.69026305029566*^9, 3.69026341217588*^9, 3.690263811355796*^9, 
   3.690265966358066*^9, 3.690266300544136*^9, 3.6902665129758797`*^9, 
   3.690266690997828*^9, 3.6902672958113747`*^9, 3.6902741890456657`*^9, 
   3.690274234413239*^9, {3.6902746804269047`*^9, 3.690274687047427*^9}, {
   3.6905398481011753`*^9, 3.69053987049026*^9}, 3.690551761375949*^9, 
   3.694514112820224*^9, 3.6945281499636507`*^9, 3.694528270641385*^9, 
   3.694528307896544*^9, 3.6945284570657377`*^9, 3.700218355315062*^9, 
   3.7003058972950373`*^9, {3.726400194595356*^9, 3.726400215643958*^9}, 
   3.728023398209118*^9, 3.7280236867761927`*^9, 3.728023789133974*^9, 
   3.72802616824343*^9, 3.728026500401966*^9, 3.728301037863388*^9, 
   3.7283012426907578`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
 Tranformation matrix for seven dihedral angles.\
\>", "Subsection",
 CellChangeTimes->{{3.681800611029468*^9, 3.681800660290463*^9}, 
   3.681811790284645*^9, {3.681811851444463*^9, 3.681811869269644*^9}, 
   3.685872304642069*^9, {3.6872629301512547`*^9, 3.687262930460629*^9}, {
   3.737116604413405*^9, 3.73711660511689*^9}}],

Cell["\<\
The Final transformation matrix is obtained by composing the 7 elementary \
transformation matrices given above.
For example, going from one N to a C, 4 C\[Alpha] apart, I move 7 dihedrals \
and the transformation Matrix is:\
\>", "Text",
 CellChangeTimes->{{3.681645432349728*^9, 3.681645455703678*^9}, {
   3.681646718083948*^9, 3.681646740404277*^9}, {3.681646788332128*^9, 
   3.681646860051969*^9}, 3.6817263188439083`*^9, 3.681726427988091*^9, 
   3.6847348056693497`*^9, {3.6847348431972017`*^9, 3.6847348805010433`*^9}, {
   3.728023454430168*^9, 3.7280234571976767`*^9}, {3.737116922680852*^9, 
   3.737116960489347*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"T7", "[", 
   RowBox[{
   "t1_", ",", "t2_", ",", "t3_", ",", "t4_", ",", "t5_", ",", "t6_", ",", 
    "t7_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"T", "[", 
    RowBox[{"t1", ",", "\[Alpha]1", ",", "d1", ",", "r1"}], "]"}], ".", 
   RowBox[{"T", "[", 
    RowBox[{"t2", ",", "\[Alpha]2", ",", "d2", ",", "r2"}], "]"}], ".", 
   RowBox[{"T", "[", 
    RowBox[{"t3", ",", "\[Alpha]3", ",", "d3", ",", "r3"}], "]"}], ".", 
   RowBox[{"T", "[", 
    RowBox[{"t4", ",", "\[Alpha]4", ",", "d4", ",", "r4"}], "]"}], ".", 
   RowBox[{"T", "[", 
    RowBox[{"t5", ",", "\[Alpha]5", ",", "d5", ",", "r5"}], "]"}], ".", 
   RowBox[{"T", "[", 
    RowBox[{"t6", ",", "\[Alpha]6", ",", "d6", ",", "r6"}], "]"}], ".", 
   RowBox[{"T", "[", 
    RowBox[{"t7", ",", "\[Alpha]7", ",", "d7", ",", "r7"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQvW0D52z9vNeOyi2Kc0F0idLXdSD6AOe69SCaqXf6
WQMgrfO36g6IrvmqL2sIpH9s/KYBou++9bsJok+XPgLTAsv2fQfRx0wZf4Ho
3eqKh0OBtNOk+2dA9GMJzUsg+txMibsg+mle9TsQbTvnMJj+f7ua5Wvxa8eA
k9ysILr9/k1VEL3rQLgaiG66eT7cruy1Y9pNqygQbWCReDwRSO/+//MMiE48
xBn6tOK14+dGrggQrbh3ovev2teOFde8fED0gY1vMlXrgeKTWbJB9BnHOK6D
bUD5kFdCIHqVgKY0iH7FfEIGRMfNzVQ4NvG14wZdR0UQbbTo69vFx4Duv6T+
EUQLutRLLQHSs15IyYBoACpfsfw=
  "]],

Cell["\<\
 Please note that the user is free to choose a different set of seven \
variables here. For examples link twists or a mixture of link twists and \
joint angles. The number of matrices can be lower than 7 in that case.
To mix angles and lengths, it will be necessary to take into account \
rescaling factors in the following, a feature which is currently mixing.\
\>", "Text",
 CellChangeTimes->{{3.681645432349728*^9, 3.681645455703678*^9}, {
   3.681646718083948*^9, 3.681646740404277*^9}, {3.681646788332128*^9, 
   3.681646860051969*^9}, 3.6817263188439083`*^9, 3.681726427988091*^9, 
   3.6847348056693497`*^9, {3.6847348431972017`*^9, 3.6847348805010433`*^9}, {
   3.728023454430168*^9, 3.7280234571976767`*^9}, {3.737116922680852*^9, 
   3.737116960489347*^9}, {3.737116993329397*^9, 3.737117201292921*^9}, {
   3.7371176004733477`*^9, 3.737117608625491*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Constraints equations.", "Subsection",
 CellChangeTimes->{{3.681800611029468*^9, 3.681800660290463*^9}, 
   3.681811790284645*^9, {3.681811851444463*^9, 3.681811869269644*^9}, {
   3.681878988881707*^9, 3.681879006026854*^9}, {3.7371172420130367`*^9, 
   3.737117248069759*^9}}],

Cell["\<\

The elements chosen for the constrain equations are the following: [[1, 3]], \
[[2, 3]], [[1,2]], [[1, 4]], [[2, 4]], [[3, 4]].  
The first three fix the orientation of the vector z in the last ref. system \
according to the first ref. system. The last Three its spatial position.\
\>", "Text",
 CellChangeTimes->{{3.681726203176333*^9, 3.68172630475765*^9}, {
   3.681726430350831*^9, 3.68172643035093*^9}, {3.68180002772901*^9, 
   3.681800049424693*^9}, 3.681800568483988*^9, {3.6818006748102694`*^9, 
   3.681800689074617*^9}, {3.684733347452429*^9, 3.6847334463246803`*^9}, {
   3.684734819093261*^9, 3.684734830621779*^9}, {3.684734896165432*^9, 
   3.684734940469948*^9}, {3.684914699508906*^9, 3.684914753309744*^9}, {
   3.684914783342524*^9, 3.6849147834962463`*^9}, {3.6852459180883217`*^9, 
   3.685245919191091*^9}, {3.6852460206068*^9, 3.685246185191395*^9}, {
   3.728023463926323*^9, 3.728023479237876*^9}, {3.7282826328384733`*^9, 
   3.728282641211997*^9}, {3.737117209324448*^9, 3.737117210348095*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"T7eqs", "[", 
   RowBox[{
   "t1_", ",", "t2_", ",", "t3_", ",", "t4_", ",", "t5_", ",", "t6_", ",", 
    "t7_"}], "]"}], ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"T7", "[", 
       RowBox[{
       "t1", ",", "t2", ",", "t3", ",", "t4", ",", "t5", ",", "t6", ",", 
        "t7"}], "]"}], ")"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"T7", "[", 
       RowBox[{
       "t1", ",", "t2", ",", "t3", ",", "t4", ",", "t5", ",", "t6", ",", 
        "t7"}], "]"}], ")"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "3"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"T7", "[", 
       RowBox[{
       "t1", ",", "t2", ",", "t3", ",", "t4", ",", "t5", ",", "t6", ",", 
        "t7"}], "]"}], ")"}], "[", 
     RowBox[{"[", 
      RowBox[{"2", ",", "3"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"T7", "[", 
       RowBox[{
       "t1", ",", "t2", ",", "t3", ",", "t4", ",", "t5", ",", "t6", ",", 
        "t7"}], "]"}], ")"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "4"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"T7", "[", 
       RowBox[{
       "t1", ",", "t2", ",", "t3", ",", "t4", ",", "t5", ",", "t6", ",", 
        "t7"}], "]"}], ")"}], "[", 
     RowBox[{"[", 
      RowBox[{"2", ",", "4"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"T7", "[", 
       RowBox[{
       "t1", ",", "t2", ",", "t3", ",", "t4", ",", "t5", ",", "t6", ",", 
        "t7"}], "]"}], ")"}], "[", 
     RowBox[{"[", 
      RowBox[{"3", ",", "4"}], "]"}], "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.685945481099069*^9, 3.685945531582673*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[" Derivative of T7 for different dihedral angles.", "Subsection",
 CellChangeTimes->{{3.681800611029468*^9, 3.681800660290463*^9}, 
   3.681811790284645*^9, {3.681811851444463*^9, 3.681811869269644*^9}, {
   3.681878988881707*^9, 3.681879006026854*^9}}],

Cell["\<\
These are needed to apply Dini\[CloseCurlyQuote]s theorem. \
\>", "Text",
 CellChangeTimes->{{3.681645432349728*^9, 3.681645455703678*^9}, {
   3.681646718083948*^9, 3.681646740404277*^9}, {3.681646788332128*^9, 
   3.681646860051969*^9}, 3.6817263188439083`*^9, 3.681726427988091*^9, 
   3.6847348056693497`*^9, {3.6847348431972017`*^9, 3.6847348805010433`*^9}, {
   3.684734981805079*^9, 3.684734992197216*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"DT7t1", "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"T7eqs", "[", 
      RowBox[{
      "t1", ",", "t2", ",", "t3", ",", "t4", ",", "t5", ",", "t6", ",", 
       "t7"}], "]"}], ",", 
     RowBox[{"{", "t1", "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"DT7t2", "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"T7eqs", "[", 
      RowBox[{
      "t1", ",", "t2", ",", "t3", ",", "t4", ",", "t5", ",", "t6", ",", 
       "t7"}], "]"}], ",", 
     RowBox[{"{", "t2", "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"DT7t3", "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"T7eqs", "[", 
      RowBox[{
      "t1", ",", "t2", ",", "t3", ",", "t4", ",", "t5", ",", "t6", ",", 
       "t7"}], "]"}], ",", 
     RowBox[{"{", "t3", "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"DT7t4", "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"T7eqs", "[", 
      RowBox[{
      "t1", ",", "t2", ",", "t3", ",", "t4", ",", "t5", ",", "t6", ",", 
       "t7"}], "]"}], ",", 
     RowBox[{"{", "t4", "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"DT7t5", "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"T7eqs", "[", 
      RowBox[{
      "t1", ",", "t2", ",", "t3", ",", "t4", ",", "t5", ",", "t6", ",", 
       "t7"}], "]"}], ",", 
     RowBox[{"{", "t5", "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"DT7t6", "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"T7eqs", "[", 
      RowBox[{
      "t1", ",", "t2", ",", "t3", ",", "t4", ",", "t5", ",", "t6", ",", 
       "t7"}], "]"}], ",", 
     RowBox[{"{", "t6", "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"DT7t7", "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"T7eqs", "[", 
      RowBox[{
      "t1", ",", "t2", ",", "t3", ",", "t4", ",", "t5", ",", "t6", ",", 
       "t7"}], "]"}], ",", 
     RowBox[{"{", "t7", "}"}]}], "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.681652441479309*^9, 3.681652517170555*^9}, {
   3.6816527043805943`*^9, 3.681652822308901*^9}, {3.681654351007485*^9, 
   3.681654356349833*^9}, {3.681654404950111*^9, 3.681654409341445*^9}, {
   3.6817205502416143`*^9, 3.681720579234137*^9}, {3.681800907294629*^9, 
   3.681800966809394*^9}, {3.6818010462972937`*^9, 3.681801125922819*^9}, {
   3.681879040202289*^9, 3.6818790556632557`*^9}, {3.6846773488700113`*^9, 
   3.6846773490299397`*^9}, 3.684738369254942*^9, {3.6851782193351603`*^9, 
   3.6851782221583*^9}, {3.685178800277627*^9, 3.6851788003554783`*^9}, {
   3.685183139197537*^9, 3.685183140261793*^9}, 3.6851912954870167`*^9, {
   3.685193574239706*^9, 3.685193575136951*^9}, {3.685194595313645*^9, 
   3.685194596089986*^9}, {3.6852459414260187`*^9, 3.685245949905895*^9}, {
   3.6852468613692923`*^9, 3.6852468626857567`*^9}, {3.685945002572411*^9, 
   3.685945052303803*^9}, {3.685945545414063*^9, 3.685945562444949*^9}, 
   3.685945618410771*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Jacobians ", "Subsection",
 CellChangeTimes->{{3.681800611029468*^9, 3.681800660290463*^9}, {
  3.681800735386786*^9, 3.6818007972025433`*^9}, {3.681811877740818*^9, 
  3.681811890004242*^9}}],

Cell["\<\
To apply Dini\[CloseCurlyQuote]s theorem, we have to choose one free \
variable, compute the jacobian of the equations with respect to the other 6 \
variables and invert it. Inversion will be done numerically. Nonetheless, it \
will be possible to print an expression for the determinant of the jacobian, \
allowing one to check if the inversion is possible.\
\>", "Text",
 CellChangeTimes->{{3.681726203176333*^9, 3.68172630475765*^9}, {
   3.681726430350831*^9, 3.68172643035093*^9}, {3.68180002772901*^9, 
   3.681800049424693*^9}, 3.681800568483988*^9, {3.6818006748102694`*^9, 
   3.681800689074617*^9}, {3.681800800658383*^9, 3.6818008926509037`*^9}, {
   3.7371172689732523`*^9, 3.737117274549086*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"jacT7t1", "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"T7eqs", "[", 
      RowBox[{
      "t1", ",", "t2", ",", "t3", ",", "t4", ",", "t5", ",", "t6", ",", 
       "t7"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"t2", ",", "t3", ",", "t4", ",", "t5", ",", "t6", ",", "t7"}], 
       "}"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"jacT7t2", "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"T7eqs", "[", 
      RowBox[{
      "t1", ",", "t2", ",", "t3", ",", "t4", ",", "t5", ",", "t6", ",", 
       "t7"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"t1", ",", "t3", ",", "t4", ",", "t5", ",", "t6", ",", "t7"}], 
       "}"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"jacT7t3", "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"T7eqs", "[", 
      RowBox[{
      "t1", ",", "t2", ",", "t3", ",", "t4", ",", "t5", ",", "t6", ",", 
       "t7"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"t1", ",", "t2", ",", "t4", ",", "t5", ",", "t6", ",", "t7"}], 
       "}"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"jacT7t4", "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"T7eqs", "[", 
      RowBox[{
      "t1", ",", "t2", ",", "t3", ",", "t4", ",", "t5", ",", "t6", ",", 
       "t7"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"t1", ",", "t2", ",", "t3", ",", "t5", ",", "t6", ",", "t7"}], 
       "}"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"jacT7t5", "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"T7eqs", "[", 
      RowBox[{
      "t1", ",", "t2", ",", "t3", ",", "t4", ",", "t5", ",", "t6", ",", 
       "t7"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"t1", ",", "t2", ",", "t3", ",", "t4", ",", "t6", ",", "t7"}], 
       "}"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"jacT7t6", "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"T7eqs", "[", 
      RowBox[{
      "t1", ",", "t2", ",", "t3", ",", "t4", ",", "t5", ",", "t6", ",", 
       "t7"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"t1", ",", "t2", ",", "t3", ",", "t4", ",", "t5", ",", "t7"}], 
       "}"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"jacT7t7", "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"T7eqs", "[", 
      RowBox[{
      "t1", ",", "t2", ",", "t3", ",", "t4", ",", "t5", ",", "t6", ",", 
       "t7"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"t1", ",", "t2", ",", "t3", ",", "t4", ",", "t5", ",", "t6"}], 
       "}"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.681652441479309*^9, 3.681652517170555*^9}, {
   3.6816527043805943`*^9, 3.681652822308901*^9}, {3.681654351007485*^9, 
   3.681654356349833*^9}, {3.681654404950111*^9, 3.681654409341445*^9}, {
   3.6817205502416143`*^9, 3.681720579234137*^9}, {3.681800907294629*^9, 
   3.681800966809394*^9}, {3.6818010462972937`*^9, 3.681801125922819*^9}, {
   3.681879040202289*^9, 3.6818790556632557`*^9}, {3.6846773488700113`*^9, 
   3.6846773490299397`*^9}, 3.684738369254942*^9, {3.6851782193351603`*^9, 
   3.6851782221583*^9}, {3.685178800277627*^9, 3.6851788003554783`*^9}, {
   3.685183139197537*^9, 3.685183140261793*^9}, 3.6851912954870167`*^9, {
   3.685193574239706*^9, 3.685193575136951*^9}, {3.685194595313645*^9, 
   3.685194596089986*^9}, {3.6852459414260187`*^9, 3.685245949905895*^9}, {
   3.6852468613692923`*^9, 3.6852468626857567`*^9}, {3.685945002572411*^9, 
   3.685945052303803*^9}, {3.685945545414063*^9, 3.685945562444949*^9}, 
   3.685945618410771*^9, {3.685945649690555*^9, 3.6859457982680817`*^9}, {
   3.685945839191251*^9, 3.685945857020853*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"JACT7", "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"T7eqs", "[", 
      RowBox[{
      "t1", ",", "t2", ",", "t3", ",", "t4", ",", "t5", ",", "t6", ",", 
       "t7"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
       "t1", ",", "t2", ",", "t3", ",", "t4", ",", "t5", ",", "t6", ",", 
        "t7"}], "}"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.687685498776444*^9, 3.687685517625354*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Printing equations in C format ", "Section",
 CellChangeTimes->{{3.681800611029468*^9, 3.681800660290463*^9}, {
  3.681800735386786*^9, 3.6818007972025433`*^9}, {3.681811877740818*^9, 
  3.681811890004242*^9}, {3.684737491053339*^9, 3.6847375040212317`*^9}}],

Cell[TextData[{
 "All the equations and functions derived before must be plugged in a C code. \
We do so by printing them in C form. For the C code to be fast and reliable, \
we need to do two things:\n\n",
 StyleBox["1.",
  FontWeight->"Bold"],
 " substitute all sines and cosines with some variables c and s, which will \
be calculated beforehand and passed to the function.\n",
 StyleBox["2.",
  FontWeight->"Bold"],
 " Put the equations in the simplest possible polynomial form. This is \
achieved by using the HornerForm routine. \n\nPoint 1. above is achieved by \
using the following substitution rule."
}], "Text",
 CellChangeTimes->{{3.681820945918708*^9, 3.681820993038426*^9}, {
   3.684737511853367*^9, 3.684737718853901*^9}, 3.684737836565733*^9, {
   3.72828276110894*^9, 3.728282783981347*^9}, {3.737117310317629*^9, 
   3.737117321125641*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"substitRule", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", "t1", "]"}], "\[Rule]", "c1"}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", "t2", "]"}], "\[Rule]", "c2"}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", "t3", "]"}], "\[Rule]", "c3"}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", "t4", "]"}], "\[Rule]", "c4"}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", "t5", "]"}], "\[Rule]", "c5"}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", "t6", "]"}], "\[Rule]", "c6"}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", "t7", "]"}], "\[Rule]", "c7"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Sin", "[", "t1", "]"}], "\[Rule]", "s1"}], ",", 
     RowBox[{
      RowBox[{"Sin", "[", "t2", "]"}], "\[Rule]", "s2"}], ",", 
     RowBox[{
      RowBox[{"Sin", "[", "t3", "]"}], "\[Rule]", "s3"}], ",", 
     RowBox[{
      RowBox[{"Sin", "[", "t4", "]"}], "\[Rule]", "s4"}], ",", 
     RowBox[{
      RowBox[{"Sin", "[", "t5", "]"}], "\[Rule]", "s5"}], ",", 
     RowBox[{
      RowBox[{"Sin", "[", "t6", "]"}], "\[Rule]", "s6"}], ",", 
     RowBox[{
      RowBox[{"Sin", "[", "t7", "]"}], "\[Rule]", "s7"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Cos", "[", "\[Alpha]1", "]"}], "\[Rule]", "ca1"}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", "\[Alpha]2", "]"}], "\[Rule]", "ca2"}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", "\[Alpha]3", "]"}], "\[Rule]", "ca3"}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", "\[Alpha]4", "]"}], "\[Rule]", "ca4"}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", "\[Alpha]5", "]"}], "\[Rule]", "ca5"}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", "\[Alpha]6", "]"}], "\[Rule]", "ca6"}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", "\[Alpha]7", "]"}], "\[Rule]", "ca7"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Alpha]1", "]"}], "\[Rule]", "sa1"}], ",", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Alpha]2", "]"}], "\[Rule]", "sa2"}], ",", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Alpha]3", "]"}], "\[Rule]", "sa3"}], ",", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Alpha]4", "]"}], "\[Rule]", "sa4"}], ",", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Alpha]5", "]"}], "\[Rule]", "sa5"}], ",", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Alpha]6", "]"}], "\[Rule]", "sa6"}], ",", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Alpha]7", "]"}], "\[Rule]", "sa7"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.681800291225457*^9, 3.681800305673237*^9}, {
  3.685945904687512*^9, 3.6859459394452753`*^9}, {3.700218018371084*^9, 
  3.700218022811274*^9}, {3.700218094019045*^9, 3.700218301712309*^9}, {
  3.700306211110484*^9, 3.7003062133603354`*^9}}],

Cell["\<\
All equations are printed one line per file. A python wrapper  then puts \
together the C headers and source files. \
\>", "Text",
 CellChangeTimes->{{3.681820945918708*^9, 3.681820993038426*^9}, {
   3.684737511853367*^9, 3.684737718853901*^9}, 3.684737836565733*^9, {
   3.684737871333476*^9, 3.6847379146215878`*^9}, 3.684737962254154*^9, {
   3.728023504414381*^9, 3.728023517558206*^9}}],

Cell[CellGroupData[{

Cell["Export T7 ", "Subsubsection",
 CellChangeTimes->{{3.681645432349728*^9, 3.681645455703678*^9}, {
  3.681645503795989*^9, 3.681645512972199*^9}, {3.6847377410055323`*^9, 
  3.684737744829381*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<T7_12.c\>\"", ",", 
    RowBox[{"CForm", "[", 
     RowBox[{"HornerForm", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"T7", "[", 
         RowBox[{
         "t1", ",", "t2", ",", "t3", ",", "t4", ",", "t5", ",", "t6", ",", 
          "t7"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}], "/.", "substitRule"}], "]"}], 
     "]"}], ",", "\"\<Text\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<T7_13.c\>\"", ",", 
    RowBox[{"CForm", "[", 
     RowBox[{"HornerForm", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"T7", "[", 
         RowBox[{
         "t1", ",", "t2", ",", "t3", ",", "t4", ",", "t5", ",", "t6", ",", 
          "t7"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "3"}], "]"}], "]"}], "/.", "substitRule"}], "]"}], 
     "]"}], ",", "\"\<Text\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<T7_23.c\>\"", ",", 
    RowBox[{"CForm", "[", 
     RowBox[{"HornerForm", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"T7", "[", 
         RowBox[{
         "t1", ",", "t2", ",", "t3", ",", "t4", ",", "t5", ",", "t6", ",", 
          "t7"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "3"}], "]"}], "]"}], "/.", "substitRule"}], "]"}], 
     "]"}], ",", "\"\<Text\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<T7_14.c\>\"", ",", 
    RowBox[{"CForm", "[", 
     RowBox[{"HornerForm", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"T7", "[", 
         RowBox[{
         "t1", ",", "t2", ",", "t3", ",", "t4", ",", "t5", ",", "t6", ",", 
          "t7"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "4"}], "]"}], "]"}], "/.", "substitRule"}], "]"}], 
     "]"}], ",", "\"\<Text\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<T7_24.c\>\"", ",", 
    RowBox[{"CForm", "[", 
     RowBox[{"HornerForm", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"T7", "[", 
         RowBox[{
         "t1", ",", "t2", ",", "t3", ",", "t4", ",", "t5", ",", "t6", ",", 
          "t7"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "4"}], "]"}], "]"}], "/.", "substitRule"}], "]"}], 
     "]"}], ",", "\"\<Text\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<T7_34.c\>\"", ",", 
    RowBox[{"CForm", "[", 
     RowBox[{"HornerForm", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"T7", "[", 
         RowBox[{
         "t1", ",", "t2", ",", "t3", ",", "t4", ",", "t5", ",", "t6", ",", 
          "t7"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "4"}], "]"}], "]"}], "/.", "substitRule"}], "]"}], 
     "]"}], ",", "\"\<Text\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<T7_33.c\>\"", ",", 
    RowBox[{"CForm", "[", 
     RowBox[{"HornerForm", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"T7", "[", 
         RowBox[{
         "t1", ",", "t2", ",", "t3", ",", "t4", ",", "t5", ",", "t6", ",", 
          "t7"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "3"}], "]"}], "]"}], "/.", "substitRule"}], "]"}], 
     "]"}], ",", "\"\<Text\>\""}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.681796122893238*^9, 3.68179612767305*^9}, {
   3.6818000956801023`*^9, 3.681800181195786*^9}, {3.6818002246271753`*^9, 
   3.6818003754341717`*^9}, {3.681800494119624*^9, 3.6818005551999903`*^9}, {
   3.684677341240079*^9, 3.684677341397162*^9}, {3.6847349538725557`*^9, 
   3.6847349586900053`*^9}, {3.685178307789073*^9, 3.685178308934381*^9}, {
   3.685183231955254*^9, 3.685183232283214*^9}, {3.685191345923911*^9, 
   3.68519134871354*^9}, 3.685193668074378*^9, {3.685194662758869*^9, 
   3.685194663963832*^9}, {3.6852459820892277`*^9, 3.685245997864069*^9}, {
   3.685249481373715*^9, 3.685249481548455*^9}, {3.68594595521454*^9, 
   3.685945988342832*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Export DT7 ", "Subsubsection",
 CellChangeTimes->{{3.681645432349728*^9, 3.681645455703678*^9}, {
  3.681645503795989*^9, 3.681645512972199*^9}, {3.6847377410055323`*^9, 
  3.684737751981251*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"bname", "=", "\"\<DT7_t1\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"fname", "=", 
        RowBox[{"bname", "<>", "\"\<_\>\"", "<>", 
         RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<.c\>\""}]}], ";", 
       "\n", 
       RowBox[{"Export", "[", 
        RowBox[{"fname", ",", 
         RowBox[{"CForm", "[", 
          RowBox[{
           RowBox[{"HornerForm", "[", 
            RowBox[{"DT7t1", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "]"}], "/.", "substitRule"}], 
          "]"}], ",", "\"\<Text\>\""}], "]"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "6"}], "}"}]}], "]"}], "\n"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.6818806177784653`*^9, 3.681880638332965*^9}, {
   3.681880730025375*^9, 3.681880826027402*^9}, {3.681880865816676*^9, 
   3.681880874498308*^9}, {3.685946000217082*^9, 3.68594602326626*^9}, 
   3.728027372066931*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"bname", "=", "\"\<DT7_t2\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"fname", "=", 
        RowBox[{"bname", "<>", "\"\<_\>\"", "<>", 
         RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<.c\>\""}]}], ";", 
       "\n", 
       RowBox[{"Export", "[", 
        RowBox[{"fname", ",", 
         RowBox[{"CForm", "[", 
          RowBox[{
           RowBox[{"HornerForm", "[", 
            RowBox[{"DT7t2", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "]"}], "/.", "substitRule"}], 
          "]"}], ",", "\"\<Text\>\""}], "]"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "6"}], "}"}]}], "]"}], "\n"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.6818806177784653`*^9, 3.681880638332965*^9}, {
   3.681880730025375*^9, 3.681880826027402*^9}, {3.681880874498393*^9, 
   3.681880909189371*^9}, {3.6859460029344873`*^9, 3.685946026583844*^9}, 
   3.728027374619454*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"bname", "=", "\"\<DT7_t3\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"fname", "=", 
        RowBox[{"bname", "<>", "\"\<_\>\"", "<>", 
         RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<.c\>\""}]}], ";", 
       "\n", 
       RowBox[{"Export", "[", 
        RowBox[{"fname", ",", 
         RowBox[{"CForm", "[", 
          RowBox[{
           RowBox[{"HornerForm", "[", 
            RowBox[{"DT7t3", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "]"}], "/.", "substitRule"}], 
          "]"}], ",", "\"\<Text\>\""}], "]"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "6"}], "}"}]}], "]"}], "\n"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.6818806177784653`*^9, 3.681880638332965*^9}, {
  3.681880730025375*^9, 3.681880826027402*^9}, {3.681880865816676*^9, 
  3.681880874498308*^9}, {3.6818809118012123`*^9, 3.681880914562613*^9}, {
  3.685946005191915*^9, 3.6859460290782747`*^9}, {3.7280273773468437`*^9, 
  3.728027378146426*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"bname", "=", "\"\<DT7_t4\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"fname", "=", 
        RowBox[{"bname", "<>", "\"\<_\>\"", "<>", 
         RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<.c\>\""}]}], ";", 
       "\n", 
       RowBox[{"Export", "[", 
        RowBox[{"fname", ",", 
         RowBox[{"CForm", "[", 
          RowBox[{
           RowBox[{"HornerForm", "[", 
            RowBox[{"DT7t4", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "]"}], "/.", "substitRule"}], 
          "]"}], ",", "\"\<Text\>\""}], "]"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "6"}], "}"}]}], "]"}], "\n"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.6818806177784653`*^9, 3.681880638332965*^9}, {
   3.681880730025375*^9, 3.681880826027402*^9}, 3.681880874498393*^9, {
   3.681880916354432*^9, 3.6818809204281063`*^9}, {3.6859460078240747`*^9, 
   3.685946032670453*^9}, 3.728027380866893*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"bname", "=", "\"\<DT7_t5\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"fname", "=", 
        RowBox[{"bname", "<>", "\"\<_\>\"", "<>", 
         RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<.c\>\""}]}], ";", 
       "\n", 
       RowBox[{"Export", "[", 
        RowBox[{"fname", ",", 
         RowBox[{"CForm", "[", 
          RowBox[{
           RowBox[{"HornerForm", "[", 
            RowBox[{"DT7t5", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "]"}], "/.", "substitRule"}], 
          "]"}], ",", "\"\<Text\>\""}], "]"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "6"}], "}"}]}], "]"}], "\n"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.6818806177784653`*^9, 3.681880638332965*^9}, {
  3.681880730025375*^9, 3.681880826027402*^9}, {3.681880865816676*^9, 
  3.681880874498308*^9}, {3.681880922665442*^9, 3.681880925584181*^9}, {
  3.6859460111360826`*^9, 3.685946035592896*^9}, {3.728027383467249*^9, 
  3.728027383963107*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"bname", "=", "\"\<DT7_t6\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"fname", "=", 
        RowBox[{"bname", "<>", "\"\<_\>\"", "<>", 
         RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<.c\>\""}]}], ";", 
       "\n", 
       RowBox[{"Export", "[", 
        RowBox[{"fname", ",", 
         RowBox[{"CForm", "[", 
          RowBox[{
           RowBox[{"HornerForm", "[", 
            RowBox[{"DT7t6", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "]"}], "/.", "substitRule"}], 
          "]"}], ",", "\"\<Text\>\""}], "]"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "6"}], "}"}]}], "]"}], "\n"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.6818806177784653`*^9, 3.681880638332965*^9}, {
   3.681880730025375*^9, 3.681880826027402*^9}, 3.681880874498393*^9, {
   3.6818809277160883`*^9, 3.681880932046232*^9}, {3.685946013535125*^9, 
   3.685946038198215*^9}, {3.7280273862271547`*^9, 3.728027387338654*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"bname", "=", "\"\<DT7_t7\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"fname", "=", 
        RowBox[{"bname", "<>", "\"\<_\>\"", "<>", 
         RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<.c\>\""}]}], ";", 
       "\n", 
       RowBox[{"Export", "[", 
        RowBox[{"fname", ",", 
         RowBox[{"CForm", "[", 
          RowBox[{
           RowBox[{"HornerForm", "[", 
            RowBox[{"DT7t7", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "]"}], "/.", "substitRule"}], 
          "]"}], ",", "\"\<Text\>\""}], "]"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "6"}], "}"}]}], "]"}], "\n"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.6818806177784653`*^9, 3.681880638332965*^9}, {
   3.681880730025375*^9, 3.681880826027402*^9}, {3.681880865816676*^9, 
   3.681880874498308*^9}, {3.681880922665442*^9, 3.6818809426980267`*^9}, {
   3.685946015975052*^9, 3.6859460408725023`*^9}, 3.728027389708652*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Export the Jacobians", "Subsubsection",
 CellChangeTimes->{{3.681645432349728*^9, 3.681645455703678*^9}, {
  3.681645503795989*^9, 3.681645512972199*^9}, {3.6847377410055323`*^9, 
  3.684737760381135*^9}, {3.684737798989543*^9, 3.684737803237302*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Do", "[", "\[IndentingNewLine]", " ", 
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"bname", "=", "\"\<jac_t1\>\""}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"el", "=", 
         RowBox[{"CForm", "[", 
          RowBox[{
           RowBox[{"HornerForm", "[", 
            RowBox[{"jacT7t1", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}], "/.", 
           "substitRule"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"fname", "=", 
         RowBox[{"bname", "<>", "\"\<_\>\"", "<>", 
          RowBox[{"ToString", "[", "i", "]"}], "<>", 
          RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<.c\>\""}]}], ";", 
        " ", "\[IndentingNewLine]", 
        RowBox[{"Export", "[", 
         RowBox[{"fname", ",", "el", ",", "\"\<Text\>\""}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "6"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"i", ",", "6"}], "}"}]}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.6818048176270847`*^9, 3.681804921463805*^9}, {
   3.68180497976021*^9, 3.6818050195822477`*^9}, {3.681805055192925*^9, 
   3.681805324579636*^9}, {3.681805391762257*^9, 3.681805426548307*^9}, 
   3.6818055356421423`*^9, {3.681805570626259*^9, 3.681805573016923*^9}, {
   3.681805639513953*^9, 3.681805641566369*^9}, 3.68181238666877*^9, 
   3.6818798277447433`*^9, 3.6859487527468433`*^9, 3.6859488003526773`*^9, 
   3.728027367548256*^9}],

Cell[BoxData[
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Do", "[", "\[IndentingNewLine]", " ", 
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"bname", "=", "\"\<jac_t2\>\""}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"el", "=", 
         RowBox[{"CForm", "[", 
          RowBox[{
           RowBox[{"HornerForm", "[", 
            RowBox[{"jacT7t2", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}], "/.", 
           "substitRule"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"fname", "=", 
         RowBox[{"bname", "<>", "\"\<_\>\"", "<>", 
          RowBox[{"ToString", "[", "i", "]"}], "<>", 
          RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<.c\>\""}]}], ";", 
        " ", "\[IndentingNewLine]", 
        RowBox[{"Export", "[", 
         RowBox[{"fname", ",", "el", ",", "\"\<Text\>\""}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "6"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"i", ",", "6"}], "}"}]}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.6818048176270847`*^9, 3.681804921463805*^9}, {
   3.68180497976021*^9, 3.6818050195822477`*^9}, {3.681805055192925*^9, 
   3.681805324579636*^9}, {3.681805391762257*^9, 3.681805426548307*^9}, 
   3.6818055356421423`*^9, {3.681805570626259*^9, 3.681805573016923*^9}, {
   3.681805639513953*^9, 3.6818056602477818`*^9}, 3.681812386668846*^9, 
   3.685948755063609*^9, 3.685948797632557*^9, 3.728027364339731*^9}],

Cell[BoxData[
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Do", "[", "\[IndentingNewLine]", " ", 
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"bname", "=", "\"\<jac_t3\>\""}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"el", "=", 
         RowBox[{"CForm", "[", 
          RowBox[{
           RowBox[{"HornerForm", "[", 
            RowBox[{"jacT7t3", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}], "/.", 
           "substitRule"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"fname", "=", 
         RowBox[{"bname", "<>", "\"\<_\>\"", "<>", 
          RowBox[{"ToString", "[", "i", "]"}], "<>", 
          RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<.c\>\""}]}], ";", 
        " ", "\[IndentingNewLine]", 
        RowBox[{"Export", "[", 
         RowBox[{"fname", ",", "el", ",", "\"\<Text\>\""}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "6"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"i", ",", "6"}], "}"}]}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.6818048176270847`*^9, 3.681804921463805*^9}, {
   3.68180497976021*^9, 3.6818050195822477`*^9}, {3.681805055192925*^9, 
   3.681805324579636*^9}, {3.681805391762257*^9, 3.681805426548307*^9}, 
   3.6818055356421423`*^9, {3.681805570626259*^9, 3.681805573016923*^9}, {
   3.681805639513953*^9, 3.681805641566369*^9}, {3.681805674816107*^9, 
   3.681805676793446*^9}, 3.6818123866689157`*^9, 3.6859487571855583`*^9, 
   3.685948795431177*^9, 3.728027361427887*^9}],

Cell[BoxData[
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Do", "[", "\[IndentingNewLine]", " ", 
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"bname", "=", "\"\<jac_t4\>\""}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"el", "=", 
         RowBox[{"CForm", "[", 
          RowBox[{
           RowBox[{"HornerForm", "[", 
            RowBox[{"jacT7t4", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}], "/.", 
           "substitRule"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"fname", "=", 
         RowBox[{"bname", "<>", "\"\<_\>\"", "<>", 
          RowBox[{"ToString", "[", "i", "]"}], "<>", 
          RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<.c\>\""}]}], ";", 
        " ", "\[IndentingNewLine]", 
        RowBox[{"Export", "[", 
         RowBox[{"fname", ",", "el", ",", "\"\<Text\>\""}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "6"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"i", ",", "6"}], "}"}]}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.6818048176270847`*^9, 3.681804921463805*^9}, {
   3.68180497976021*^9, 3.6818050195822477`*^9}, {3.681805055192925*^9, 
   3.681805324579636*^9}, {3.681805391762257*^9, 3.681805426548307*^9}, 
   3.6818055356421423`*^9, {3.681805570626259*^9, 3.681805573016923*^9}, {
   3.681805639513953*^9, 3.6818056853879557`*^9}, 3.681812386668985*^9, 
   3.685948759634015*^9, 3.685948790861754*^9, {3.728027354668865*^9, 
   3.728027355391234*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["j"], "Input",
 CellChangeTimes->{3.728301228918213*^9}],

Cell[BoxData["j"], "Output",
 CellChangeTimes->{3.728301326353572*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Do", "[", "\[IndentingNewLine]", " ", 
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"bname", "=", "\"\<jac_t5\>\""}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"el", "=", 
         RowBox[{"CForm", "[", 
          RowBox[{
           RowBox[{"HornerForm", "[", 
            RowBox[{"jacT7t5", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}], "/.", 
           "substitRule"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"fname", "=", 
         RowBox[{"bname", "<>", "\"\<_\>\"", "<>", 
          RowBox[{"ToString", "[", "i", "]"}], "<>", 
          RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<.c\>\""}]}], ";", 
        " ", "\[IndentingNewLine]", 
        RowBox[{"Export", "[", 
         RowBox[{"fname", ",", "el", ",", "\"\<Text\>\""}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "6"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"i", ",", "6"}], "}"}]}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.6818048176270847`*^9, 3.681804921463805*^9}, {
   3.68180497976021*^9, 3.6818050195822477`*^9}, {3.681805055192925*^9, 
   3.681805324579636*^9}, {3.681805391762257*^9, 3.681805426548307*^9}, 
   3.6818055356421423`*^9, {3.681805570626259*^9, 3.681805573016923*^9}, {
   3.681805639513953*^9, 3.681805641566369*^9}, {3.681805702450634*^9, 
   3.6818057046658916`*^9}, 3.681812386669055*^9, {3.6859487630312567`*^9, 
   3.685948788294053*^9}, 3.7280273520357733`*^9}],

Cell[BoxData[
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Do", "[", "\[IndentingNewLine]", " ", 
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"bname", "=", "\"\<jac_t6\>\""}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"el", "=", 
         RowBox[{"CForm", "[", 
          RowBox[{
           RowBox[{"HornerForm", "[", 
            RowBox[{"jacT7t6", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}], "/.", 
           "substitRule"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"fname", "=", 
         RowBox[{"bname", "<>", "\"\<_\>\"", "<>", 
          RowBox[{"ToString", "[", "i", "]"}], "<>", 
          RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<.c\>\""}]}], ";", 
        " ", "\[IndentingNewLine]", 
        RowBox[{"Export", "[", 
         RowBox[{"fname", ",", "el", ",", "\"\<Text\>\""}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "6"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"i", ",", "6"}], "}"}]}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.6818048176270847`*^9, 3.681804921463805*^9}, {
   3.68180497976021*^9, 3.6818050195822477`*^9}, {3.681805055192925*^9, 
   3.681805324579636*^9}, {3.681805391762257*^9, 3.681805426548307*^9}, 
   3.6818055356421423`*^9, {3.681805570626259*^9, 3.681805573016923*^9}, {
   3.681805639513953*^9, 3.6818056602477818`*^9}, {3.6818057071054688`*^9, 
   3.681805709315777*^9}, 3.681812386669125*^9, {3.685948765224861*^9, 
   3.6859487808087683`*^9}, 3.728027348259735*^9}],

Cell[BoxData[
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Do", "[", "\[IndentingNewLine]", " ", 
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"bname", "=", "\"\<jac_t7\>\""}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"el", "=", 
         RowBox[{"CForm", "[", 
          RowBox[{
           RowBox[{"HornerForm", "[", 
            RowBox[{"jacT7t7", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}], "/.", 
           "substitRule"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"fname", "=", 
         RowBox[{"bname", "<>", "\"\<_\>\"", "<>", 
          RowBox[{"ToString", "[", "i", "]"}], "<>", 
          RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<.c\>\""}]}], ";", 
        " ", "\[IndentingNewLine]", 
        RowBox[{"Export", "[", 
         RowBox[{"fname", ",", "el", ",", "\"\<Text\>\""}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "6"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"i", ",", "6"}], "}"}]}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.6818048176270847`*^9, 3.681804921463805*^9}, {
   3.68180497976021*^9, 3.6818050195822477`*^9}, {3.681805055192925*^9, 
   3.681805324579636*^9}, {3.681805391762257*^9, 3.681805426548307*^9}, 
   3.6818055356421423`*^9, {3.681805570626259*^9, 3.681805573016923*^9}, {
   3.681805639513953*^9, 3.6818056602477818`*^9}, {3.6818057071054688`*^9, 
   3.681805709315777*^9}, {3.6818067889063997`*^9, 3.6818067956109457`*^9}, 
   3.681812386669194*^9, {3.685948767432888*^9, 3.685948772889381*^9}, 
   3.728027345443819*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Call wrapper", "Section",
 CellChangeTimes->{{3.681645432349728*^9, 3.681645455703678*^9}, {
  3.681645503795989*^9, 3.681645512972199*^9}, {3.6847377410055323`*^9, 
  3.684737760381135*^9}, {3.684737798989543*^9, 3.684737803237302*^9}, {
  3.684737981053873*^9, 3.684737987453412*^9}, {3.72830095659081*^9, 
  3.728300959814547*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Run", "[", "\"\<python ./Precompiler.py\>\"", "]"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Run", "[", "\"\<rm *_t*.c\>\"", "]"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Run", "[", "\"\<./create_C_files_LUdecomp_inner_check.sh\>\"", "]"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.68473801399408*^9, 3.684738080792008*^9}, {
  3.6847381598990393`*^9, 3.684738160184855*^9}, {3.685246980338606*^9, 
  3.685246984225388*^9}, {3.6859460600525627`*^9, 3.6859460629404573`*^9}, {
  3.6899274355209923`*^9, 3.689927439424233*^9}, {3.700218318456004*^9, 
  3.7002183236472054`*^9}, {3.7283009626021442`*^9, 3.728301000355138*^9}, {
  3.728301234007682*^9, 3.728301262703457*^9}, {3.728302572997457*^9, 
  3.7283025779432583`*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1918, 1143},
WindowMargins->{{Automatic, -9}, {Automatic, -8}},
PrintingCopies->1,
PrintingPageRange->{Automatic, Automatic},
PrintingOptions->{"PaperOrientation"->"Portrait",
"PaperSize"->{594.75, 842.25},
"PostScriptOutputFile"->"/home/tubiana/Science/Projects/ABM/concert_rotations_\
Luca_Github/Mathematica_notebook_printout.pdf"},
FrontEndVersion->"9.0 for Linux x86 (64-bit) (February 7, 2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 129, 2, 92, "Title"],
Cell[554, 19, 169, 5, 68, "Text"],
Cell[726, 26, 4896, 100, 500, "Text"],
Cell[CellGroupData[{
Cell[5647, 130, 215, 3, 44, "Subsection"],
Cell[CellGroupData[{
Cell[5887, 137, 200, 4, 32, "Input"],
Cell[6090, 143, 364, 5, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6491, 153, 123, 2, 32, "Input"],
Cell[6617, 157, 1742, 25, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[8408, 188, 120, 1, 80, "Section"],
Cell[8531, 191, 176900, 3186, 877, "Text"],
Cell[185434, 3379, 94, 1, 32, "Input"],
Cell[185531, 3382, 92, 1, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[185660, 3388, 250, 5, 80, "Section"],
Cell[CellGroupData[{
Cell[185935, 3397, 253, 3, 44, "Subsection"],
Cell[186191, 3402, 1613, 44, 55, "Text"],
Cell[187807, 3448, 3005, 62, 99, "Input"],
Cell[CellGroupData[{
Cell[190837, 3514, 362, 7, 32, "Input"],
Cell[191202, 3523, 3014, 64, 79, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[194265, 3593, 339, 6, 44, "Subsection"],
Cell[194607, 3601, 640, 11, 51, "Text"],
Cell[195250, 3614, 1292, 30, 32, "Input"],
Cell[196545, 3646, 875, 13, 49, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197457, 3664, 284, 4, 44, "Subsection"],
Cell[197744, 3670, 1032, 16, 68, "Text"],
Cell[198779, 3688, 1916, 56, 143, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[200732, 3749, 258, 3, 44, "Subsection"],
Cell[200993, 3754, 423, 7, 31, "Text"],
Cell[201419, 3763, 2949, 78, 165, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[204405, 3846, 198, 3, 44, "Subsection"],
Cell[204606, 3851, 719, 11, 51, "Text"],
Cell[205328, 3864, 3817, 100, 165, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[209148, 3966, 480, 14, 32, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[209677, 3986, 264, 3, 80, "Section"],
Cell[209944, 3991, 859, 17, 125, "Text"],
Cell[210806, 4010, 2780, 68, 121, "Input"],
Cell[213589, 4080, 402, 7, 30, "Text"],
Cell[CellGroupData[{
Cell[214016, 4091, 201, 3, 35, "Subsubsection"],
Cell[214220, 4096, 4118, 108, 165, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[218375, 4209, 202, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[218602, 4216, 1098, 28, 99, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[219703, 4246, 1101, 28, 99, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[220807, 4276, 1175, 29, 99, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[221985, 4307, 1125, 28, 99, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[223113, 4337, 1171, 29, 99, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[224287, 4368, 1149, 28, 99, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[225439, 4398, 1149, 28, 99, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[226637, 4432, 257, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[226919, 4439, 1701, 38, 187, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[228623, 4479, 1672, 37, 187, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[230298, 4518, 1724, 38, 187, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[232025, 4558, 1700, 38, 187, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[233762, 4601, 69, 1, 32, "Input"],
Cell[233834, 4604, 70, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[233941, 4610, 1728, 38, 187, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[235672, 4650, 1728, 38, 187, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[237403, 4690, 1780, 39, 187, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[239244, 4736, 340, 5, 80, "Section"],
Cell[239587, 4743, 824, 18, 77, "Input"]
}, Open  ]]
}, Open  ]]
}
]
*)

